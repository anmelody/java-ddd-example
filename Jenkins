pipeline {
    agent any

    environment {
        JAVA_HOME = tool name: 'JDK21', type: 'JDK'  // Updated to JDK21
        PATH = "${JAVA_HOME}/bin:${env.PATH}"  // Ensure the JDK is added to the PATH
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checking out the code"
                checkout scm
            }
        }

        stage('Start Services') {
            steps {
                echo "Starting MySQL and Elasticsearch containers..."

                // Stop and remove the MySQL container if it's already running
                bat 'docker stop mysql-container || true'
                bat 'docker rm mysql-container || true'
                bat 'docker run -d --rm --name mysql-container -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=ddd_example -p 3307:3307 mysql:8'

                // Stop and remove the Elasticsearch container if it's already running
                bat 'docker stop elasticsearch-container || true'
                bat 'docker rm elasticsearch-container || true'
                bat 'docker run -d --rm --name elasticsearch-container -e "discovery.type=single-node" -p 9200:9200 elasticsearch:7.17.0'
            }
        }

        stage('Build') {
            steps {
                echo "Running Gradle build"
                bat './gradlew clean build'  // For Windows agents
            }
        }

        stage('Test') {
            steps {
                echo "Running Gradle tests"
                bat './gradlew test'  // For Windows agents
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying application"
                // Add your deployment steps here
            }
        }
    }

    post {
        always {
            echo "Cleaning up resources"
            bat 'docker stop mysql-container || true'
            bat 'docker rm mysql-container || true'
            bat 'docker stop elasticsearch-container || true'
            bat 'docker rm elasticsearch-container || true'
        }
        success {
            echo "Build and test succeeded!"
        }
        failure {
            echo "Build or test failed!"
        }
    }
}
